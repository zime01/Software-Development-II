// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hotelEase.Services.Database;

#nullable disable

namespace hotelEase.Services.Migrations
{
    [DbContext(typeof(HotelEaseContext))]
    [Migration("20250810130014_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK__UserRole__AF2760AD81661037");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("hotelEase.Services.Database.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ImageThumb")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MimeType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Assets__3214EC07E249B58C");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomId");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 6, 10, 4, 4, 297, DateTimeKind.Unspecified),
                            FileName = "hills1.jpg",
                            HotelId = 1,
                            MimeType = "image.jpeg",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 6, 10, 44, 1, 87, DateTimeKind.Unspecified),
                            FileName = "hills2.jpg",
                            HotelId = 1,
                            MimeType = "image.jpeg",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 6, 11, 9, 30, 427, DateTimeKind.Unspecified),
                            FileName = "hills1.2.jpg",
                            HotelId = 1,
                            MimeType = "image.jpeg",
                            RoomId = 2
                        });
                });

            modelBuilder.Entity("hotelEase.Services.Database.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Cities__3214EC0763B2364D");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Sarajevo"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Mostar"
                        });
                });

            modelBuilder.Entity("hotelEase.Services.Database.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Countrie__3214EC07C5B2033D");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Croatia"
                        });
                });

            modelBuilder.Entity("hotelEase.Services.Database.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StarRating")
                        .HasColumnType("int");

                    b.Property<string>("StateMachine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Hotels__3214EC078B43B21F");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Some Address",
                            CityId = 1,
                            CountryId = 1,
                            ManagerId = 1,
                            Name = "Hotel Hills",
                            StarRating = 0
                        },
                        new
                        {
                            Id = 2,
                            Address = "Some Address",
                            CityId = 1,
                            CountryId = 1,
                            ManagerId = 1,
                            Name = "Hotel Europe",
                            StarRating = 0
                        },
                        new
                        {
                            Id = 3,
                            Address = "Some Address",
                            CityId = 1,
                            CountryId = 1,
                            ManagerId = 1,
                            Name = "Swissotel Sarajevo",
                            StarRating = 0,
                            StateMachine = "active"
                        });
                });

            modelBuilder.Entity("hotelEase.Services.Database.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3214EC07D414C746");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsRead = false,
                            Message = "Hello world",
                            SentAt = new DateTime(2025, 8, 8, 20, 14, 18, 847, DateTimeKind.Unspecified),
                            Title = "Hello world",
                            Type = "email",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            IsRead = false,
                            Message = "Your reservation #3 status changed to Completed",
                            SentAt = new DateTime(2025, 8, 8, 20, 24, 24, 237, DateTimeKind.Unspecified),
                            Title = "Reservation status updated",
                            Type = "email",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            IsRead = false,
                            Message = "Your reservation #3 status changed to Completed",
                            SentAt = new DateTime(2025, 8, 8, 20, 29, 23, 607, DateTimeKind.Unspecified),
                            Title = "Reservation status updated",
                            Type = "email",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            IsRead = false,
                            Message = "Your reservation #3 status changed to Completed",
                            SentAt = new DateTime(2025, 8, 8, 20, 30, 10, 677, DateTimeKind.Unspecified),
                            Title = "Reservation status updated",
                            Type = "email",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            IsRead = false,
                            Message = "Your reservation #4 status changed to Completed",
                            SentAt = new DateTime(2025, 8, 8, 20, 31, 4, 463, DateTimeKind.Unspecified),
                            Title = "Reservation status updated",
                            Type = "email",
                            UserId = 6
                        });
                });

            modelBuilder.Entity("hotelEase.Services.Database.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Reservat__3214EC072F6279EE");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckInDate = new DateTime(2025, 8, 7, 10, 0, 0, 100, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 8, 17, 10, 0, 0, 100, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 8, 6, 18, 5, 59, 100, DateTimeKind.Unspecified),
                            RoomId = 1,
                            TotalPrice = 1500m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CheckInDate = new DateTime(2025, 8, 7, 10, 0, 0, 100, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 8, 17, 10, 0, 0, 100, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 8, 6, 18, 5, 59, 100, DateTimeKind.Unspecified),
                            RoomId = 2,
                            TotalPrice = 1500m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CheckInDate = new DateTime(2025, 8, 20, 10, 0, 0, 680, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 8, 22, 10, 0, 0, 680, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 8, 7, 6, 30, 15, 680, DateTimeKind.Unspecified),
                            RoomId = 1,
                            Status = "Completed",
                            TotalPrice = 300m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CheckInDate = new DateTime(2025, 8, 9, 10, 28, 1, 710, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 8, 14, 10, 28, 1, 710, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 8, 8, 18, 28, 1, 710, DateTimeKind.Unspecified),
                            RoomId = 1,
                            Status = "Completed",
                            TotalPrice = 750m,
                            UserId = 6
                        });
                });

            modelBuilder.Entity("hotelEase.Services.Database.ReservationService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Reservat__3214EC075ED819B9");

                    b.HasIndex("ReservationId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ReservationServices");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Reviews__3214EC07077D883D");

                    b.HasIndex("HotelId");

                    b.HasIndex("ReservationId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Very good",
                            HotelId = 1,
                            Rating = 4,
                            ReservationId = 3,
                            ReviewDate = new DateTime(2025, 8, 7, 6, 40, 56, 70, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("hotelEase.Services.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3214EC07AE0B5CEE");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manager"
                        });
                });

            modelBuilder.Entity("hotelEase.Services.Database.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Rooms__3214EC0713FFA2B0");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 3,
                            HotelId = 1,
                            Name = "Deluxe Triple Room",
                            PricePerNight = 150m,
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 2,
                            Description = "string",
                            HotelId = 1,
                            IsAvailable = true,
                            Name = "Deluxe Double Room",
                            PricePerNight = 100m,
                            RoomTypeId = 2
                        });
                });

            modelBuilder.Entity("hotelEase.Services.Database.RoomAvailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__RoomAvai__3214EC07C7110479");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomAvailability", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 8, 10, 16, 11, 34, 197, DateTimeKind.Unspecified),
                            RoomId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 8, 11, 16, 11, 34, 197, DateTimeKind.Unspecified),
                            RoomId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2025, 8, 11, 16, 11, 34, 197, DateTimeKind.Unspecified),
                            RoomId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2025, 8, 10, 16, 11, 34, 197, DateTimeKind.Unspecified),
                            RoomId = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("hotelEase.Services.Database.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__RoomType__3214EC07AD3DD3A0");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Triple Room",
                            Name = "Deluxe"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Double Room",
                            Name = "Deluxe"
                        });
                });

            modelBuilder.Entity("hotelEase.Services.Database.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Services__3214EC0720B89D5A");

                    b.HasIndex("HotelId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Buffet breakfast included",
                            HotelId = 1,
                            Name = "Breakfast",
                            Price = 15m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Underground parking",
                            HotelId = 2,
                            Name = "Parking",
                            Price = 10m
                        });
                });

            modelBuilder.Entity("hotelEase.Services.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07E3061A65");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 1, 16, 30, 26, 593, DateTimeKind.Unspecified),
                            Email = "user@gmail.com",
                            FirstName = "meho",
                            IsActive = true,
                            LastLoginAt = new DateTime(2025, 8, 1, 16, 30, 26, 593, DateTimeKind.Unspecified),
                            LastName = "mehic",
                            PasswordHash = "OypiMGzMHp0o9DYe5yWSnkky54A=",
                            PasswordSalt = "o5hAjrnYH7NRqp9OBA6J9Q==",
                            PhoneNumber = "061111111",
                            Username = "user"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 1, 16, 19, 45, 617, DateTimeKind.Unspecified),
                            Email = "hazim@gmail.com",
                            FirstName = "hazim",
                            IsActive = true,
                            LastLoginAt = new DateTime(2025, 8, 1, 16, 19, 45, 617, DateTimeKind.Unspecified),
                            LastName = "hazim",
                            PasswordHash = "/o8nmsH5Dbd76SDP//tH/GAvlxU=",
                            PasswordSalt = "NOaVnvJ5ycPcKCjCCy8OdQ==",
                            PhoneNumber = "061234567",
                            Username = "hazim"
                        },
                        new
                        {
                            Id = 4,
                            Email = "ado",
                            FirstName = "ado",
                            LastName = "ado",
                            PasswordHash = "2fjG4q1LtucR2lA018pK6nWkyOc=",
                            PasswordSalt = "1uIRFG7ijKSRdLtw5a74dw==",
                            PhoneNumber = "063333333",
                            Username = "ado"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 8, 4, 17, 30, 15, 713, DateTimeKind.Unspecified),
                            Email = "test@gmail.com",
                            FirstName = "test",
                            IsActive = true,
                            LastLoginAt = new DateTime(2025, 8, 4, 17, 30, 15, 713, DateTimeKind.Unspecified),
                            LastName = "test",
                            PasswordHash = "s/BuGRf7UYcqxjZMRoXq3Lu30YA=",
                            PasswordSalt = "pToIaH5hKO0heIRZvyCouA==",
                            PhoneNumber = "06000000",
                            Username = "test"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 8, 8, 18, 26, 28, 500, DateTimeKind.Unspecified),
                            Email = "zime1921@gmail.com",
                            FirstName = "Hazim",
                            IsActive = true,
                            LastLoginAt = new DateTime(2025, 8, 8, 18, 26, 28, 500, DateTimeKind.Unspecified),
                            LastName = "Zimić",
                            PasswordHash = "2eM1YIrZQAVh/jGfdoyUdOMdrEQ=",
                            PasswordSalt = "s0Q/8KH8VbNeaMtkT18CAA==",
                            PhoneNumber = "+38762404557",
                            Username = "zime_01"
                        });
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.HasOne("hotelEase.Services.Database.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__RoleI__6477ECF3");

                    b.HasOne("hotelEase.Services.Database.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__UserI__6383C8BA");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Asset", b =>
                {
                    b.HasOne("hotelEase.Services.Database.Hotel", "Hotel")
                        .WithMany("Assets")
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("FK__Assets__HotelId__5DCAEF64");

                    b.HasOne("hotelEase.Services.Database.Room", "Room")
                        .WithMany("Assets")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__Assets__RoomId__5EBF139D");

                    b.Navigation("Hotel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("hotelEase.Services.Database.City", b =>
                {
                    b.HasOne("hotelEase.Services.Database.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__Cities__CountryI__3B75D760");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Hotel", b =>
                {
                    b.HasOne("hotelEase.Services.Database.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK__Hotels__CityId__3E52440B");

                    b.HasOne("hotelEase.Services.Database.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__Hotels__CountryI__3F466844");

                    b.HasOne("hotelEase.Services.Database.User", "Manager")
                        .WithMany("Hotels")
                        .HasForeignKey("ManagerId")
                        .IsRequired()
                        .HasConstraintName("FK__Hotels__ManagerI__403A8C7D");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Notification", b =>
                {
                    b.HasOne("hotelEase.Services.Database.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__UserI__5AEE82B9");

                    b.Navigation("User");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Reservation", b =>
                {
                    b.HasOne("hotelEase.Services.Database.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__RoomI__4F7CD00D");

                    b.HasOne("hotelEase.Services.Database.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__UserI__4E88ABD4");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("hotelEase.Services.Database.ReservationService", b =>
                {
                    b.HasOne("hotelEase.Services.Database.Reservation", "Reservation")
                        .WithMany("ReservationServices")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Reser__52593CB8");

                    b.HasOne("hotelEase.Services.Database.Service", "Service")
                        .WithMany("ReservationServices")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Servi__534D60F1");

                    b.Navigation("Reservation");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Review", b =>
                {
                    b.HasOne("hotelEase.Services.Database.Hotel", "Hotel")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__HotelId__571DF1D5");

                    b.HasOne("hotelEase.Services.Database.Reservation", "Reservation")
                        .WithMany("Reviews")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__Reserva__5812160E");

                    b.HasOne("hotelEase.Services.Database.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__UserId__5629CD9C");

                    b.Navigation("Hotel");

                    b.Navigation("Reservation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Room", b =>
                {
                    b.HasOne("hotelEase.Services.Database.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("FK__Rooms__HotelId__44FF419A");

                    b.HasOne("hotelEase.Services.Database.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Rooms__RoomTypeI__45F365D3");

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("hotelEase.Services.Database.RoomAvailability", b =>
                {
                    b.HasOne("hotelEase.Services.Database.Room", "Room")
                        .WithMany("RoomAvailabilities")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__RoomAvail__RoomI__48CFD27E");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Service", b =>
                {
                    b.HasOne("hotelEase.Services.Database.Hotel", "Hotel")
                        .WithMany("Services")
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("FK__Services__HotelI__4BAC3F29");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("hotelEase.Services.Database.City", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Hotel", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Reviews");

                    b.Navigation("Rooms");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Reservation", b =>
                {
                    b.Navigation("ReservationServices");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Room", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Reservations");

                    b.Navigation("RoomAvailabilities");
                });

            modelBuilder.Entity("hotelEase.Services.Database.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("hotelEase.Services.Database.Service", b =>
                {
                    b.Navigation("ReservationServices");
                });

            modelBuilder.Entity("hotelEase.Services.Database.User", b =>
                {
                    b.Navigation("Hotels");

                    b.Navigation("Notifications");

                    b.Navigation("Reservations");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
